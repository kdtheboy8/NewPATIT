
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileWriter;
import java.util.Scanner;
import javax.swing.JOptionPane;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
/**
 *
 * @author kudamlambo
 */
public class NotesDisplay extends javax.swing.JFrame {

    UserDetails userDetails;
    String buttonClickedNotes;

    /**
     * Creates new form IndustrialRevolution
     *
     * @param notesName
     */
    public NotesDisplay(String notesName) {
        this.buttonClickedNotes = notesName;
        initComponents();
        
        String output = "";

        try {
            // Try to read from TextFiles directory with .txt extension
            Scanner scFile = new Scanner(new File(buttonClickedNotes + ".txt"));
            while (scFile.hasNextLine()) {
                output += scFile.nextLine() + "\n";
            }
            jTextArea.setText(output);

        } catch (FileNotFoundException ex) {
            System.out.println("File Not Found: TextFiles/" + buttonClickedNotes + ".txt");
            jTextArea.setText("Error: Could not load notes file: " + buttonClickedNotes + ".txt");
        }

    }

    // Convenience constructor for running directly without parameters
    public NotesDisplay() 
    {
        this("Industiral Revolution G8");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea = new javax.swing.JTextArea();
        BtnExit = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        BtnRead = new javax.swing.JButton();
        BtnSaveEdit = new javax.swing.JButton();
        BtnModify = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(255, 153, 0));

        jTextArea.setColumns(20);
        jTextArea.setRows(5);
        jTextArea.setText("\n");
        jScrollPane1.setViewportView(jTextArea);

        BtnExit.setText("Exit");

        jLabel1.setText(buttonClickedNotes);

        BtnRead.setText("Read Text");
        BtnRead.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnReadActionPerformed(evt);
            }
        });

        BtnSaveEdit.setText("Save");
        BtnSaveEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnSaveEditActionPerformed(evt);
            }
        });

        BtnModify.setText("Modify");
        BtnModify.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnModifyActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(61, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 556, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(BtnRead)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(BtnSaveEdit)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(BtnModify)))
                .addContainerGap(62, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(BtnExit)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 278, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(9, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(BtnExit, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 33, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 309, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(BtnRead)
                    .addComponent(BtnSaveEdit)
                    .addComponent(BtnModify))
                .addContainerGap(16, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void BtnReadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnReadActionPerformed
        
        // Clear previous content from the text area
        jTextArea.setText(""); 
        
        // The name of the file to read
        String fileName = "TextFiles/" + buttonClickedNotes + ".txt";
        
        // Try to read from the TextFiles directory
        java.io.File file = new java.io.File(fileName);
        
        try (Scanner scanner = new Scanner(file)) 
        {
            // Clear text area and append content directly
            jTextArea.setText("");
            
            // Read each line from the file and append it to the text area
            while (scanner.hasNextLine())
            {
                jTextArea.append(scanner.nextLine() + "\n");
            }
            
            // Allow editing only if the user is a teacher
            jTextArea.setEditable(userDetails != null && "Teacher".equals(userDetails.getRole()));
        } 
        catch (Exception e) 
        {  
            // Show an error dialog if the file could not be read
            JOptionPane.showMessageDialog(this, "Could not read file: " + fileName + "\n" + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }
    }

    private void BtnSaveEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnSaveEditActionPerformed
        
        // Only allow teachers to save edits
        if (userDetails != null && "Teacher".equals(userDetails.getRole())) 
        {
            String fileName = "Transformations in Southern Africa After 1750 G10.txt";
            String content = jTextArea.getText();
            java.io.File file = new java.io.File(fileName);
            try (BufferedWriter bw = new BufferedWriter(new FileWriter(file)))
            {
                bw.write(content);
                JOptionPane.showMessageDialog(this, "File saved successfully!", "Success", JOptionPane.INFORMATION_MESSAGE);
            } 
            catch (Exception e) 
            {
                JOptionPane.showMessageDialog(this, "Could not save file: " + fileName + "\n" + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
            }
        } 
        else 
        {
            //Stop the student from editing text file
            JOptionPane.showMessageDialog(this, "Only teachers can save edits.", "Access Denied", JOptionPane.WARNING_MESSAGE);
        }
    }

    private void BtnModifyActionPerformed(java.awt.event.ActionEvent evt) {
        
         if (userDetails != null && "Teacher".equals(userDetails.getRole())) 
         {
             jTextArea.setEditable(true);
         }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(NotesDisplay.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(NotesDisplay.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(NotesDisplay.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(NotesDisplay.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new NotesDisplay().setVisible(true);
            }
        });
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BtnExit;
    private javax.swing.JButton BtnModify;
    private javax.swing.JButton BtnRead;
    private javax.swing.JButton BtnSaveEdit;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jTextArea;
    // End of variables declaration//GEN-END:variables
}
